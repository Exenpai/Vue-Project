{"remainingRequest":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\src\\components\\Pizza.vue?vue&type=template&id=73784488&scoped=true&","dependencies":[{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\src\\components\\Pizza.vue","mtime":1618119049529},{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICBfYygiZmllbGRzZXQiLCBbCiAgICAgIF92bS5fbSgwKSwKICAgICAgX2MoInRhYmxlIiwgWwogICAgICAgIF9jKCJ0YWJsZSIsIFsKICAgICAgICAgIF9jKCJ0ciIsIFsKICAgICAgICAgICAgX2MoInRkIiwgeyBzdGF0aWNDbGFzczogIiBjZW50ZXIiIH0sIFsKICAgICAgICAgICAgICBfYygiZmlndXJlIiwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzcmM6CiAgICAgICAgICAgICAgICAgICAgICAiaHR0cHM6Ly9pbWFnZXMuY29udGVudHN0YWNrLmlvL3YzL2Fzc2V0cy9ibHQwNjhkYmM1NGJmNGZjN2VkL2JsdGY3MGRmMGEzZjdiOThkMDQvNWRiNWM4MjllOWVmZmE2YmE1Mjk3MmVhL1RyaXBsZV9DaGVlc2VfUGl6emFfdjIuanBnIiwKICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIgNzVweCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICI3NXB4IiwKICAgICAgICAgICAgICAgICAgICBhbHQ6ICJQaWN0dXJlIG9mIGNoZWVzZSBwaXp6YSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfYygiZmlnY2FwdGlvbiIsIFsKICAgICAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnBpY2tlZF9waXp6YSwKICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInBpY2tlZF9waXp6YSIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAicmFkaW8iLAogICAgICAgICAgICAgICAgICAgICAgbmFtZTogInBpenphdHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogIlN1cGVyIENoZWVzeSIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7CiAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkOiBfdm0uX3EoX3ZtLnBpY2tlZF9waXp6YSwgIlN1cGVyIENoZWVzeSIpCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnBpY2tlZF9waXp6YSA9ICJTdXBlciBDaGVlc3kiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX3ZtLl92KCJTdXBlciBDaGVlc3kgIikKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJ0ZCIsIHsgc3RhdGljQ2xhc3M6ICJjZW50ZXIiIH0sIFsKICAgICAgICAgICAgICBfYygiZmlndXJlIiwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICBzcmM6CiAgICAgICAgICAgICAgICAgICAgICAiaHR0cHM6Ly93d3cucXVlZW5zbGVlYXBwZXRpdC5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTkvMDIvTWVhdC1Mb3ZlcnMtUGl6emEtNi5qcGciLAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjc1cHgiLAogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiNzVweCIsCiAgICAgICAgICAgICAgICAgICAgYWx0OiAiUGljdHVyZSBvZiBleHRyYSBtZWF0eSBwaXp6YSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfYygiZmlnY2FwdGlvbiIsIFsKICAgICAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnBpY2tlZF9waXp6YSwKICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInBpY2tlZF9waXp6YSIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAicmFkaW8iLAogICAgICAgICAgICAgICAgICAgICAgbmFtZTogInBpenphdHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogIkV4dHJhIE1lYXR5IgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ6IF92bS5fcShfdm0ucGlja2VkX3BpenphLCAiRXh0cmEgTWVhdHkiKQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5waWNrZWRfcGl6emEgPSAiRXh0cmEgTWVhdHkiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX3ZtLl92KCJFeHRyYSBNZWF0eSAiKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoInRkIiwgeyBzdGF0aWNDbGFzczogImNlbnRlciIgfSwgWwogICAgICAgICAgICAgIF9jKCJmaWd1cmUiLCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHNyYzogImh0dHBzOi8vdXNlcmNvbnRlbnQyLmh1YnN0YXRpYy5jb20vMTQ2ODU1ODUuanBnIiwKICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIgNzVweCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICI3NXB4IiwKICAgICAgICAgICAgICAgICAgICBhbHQ6ICJQaWN0dXJlIG9mIGNoZWVzZSBwaXp6YSIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfYygiZmlnY2FwdGlvbiIsIFsKICAgICAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnBpY2tlZF9waXp6YSwKICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInBpY2tlZF9waXp6YSIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAicmFkaW8iLAogICAgICAgICAgICAgICAgICAgICAgbmFtZTogInBpenphdHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogIlJlYWxseSBWZWdneSIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7CiAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkOiBfdm0uX3EoX3ZtLnBpY2tlZF9waXp6YSwgIlJlYWxseSBWZWdneSIpCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnBpY2tlZF9waXp6YSA9ICJSZWFsbHkgVmVnZ3kiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX3ZtLl92KCJSZWFsbHkgVmVnZ3kgIikKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX2MoInRhYmxlIiwgWwogICAgICAgICAgX2MoInRyIiwgWwogICAgICAgICAgICBfYygidGQiLCBbCiAgICAgICAgICAgICAgX2MoImxhYmVsIiwgeyBhdHRyczogeyBmb3I6ICJwaXp6YXF1YW50aXR5IiB9IH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiUXVhbnRpdHk6IikKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnBpenphX2Nvc3QsCiAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInBpenphX2Nvc3QiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICB0eXBlOiAibnVtYmVyIiwKICAgICAgICAgICAgICAgICAgbmFtZTogInBpenphcXVhbnRpdHkiLAogICAgICAgICAgICAgICAgICBpZDogInBpenphcXVhbnRpdHkiLAogICAgICAgICAgICAgICAgICBtaW46ICIwIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ucGl6emFfY29zdCB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF92bS5waXp6YV9jb3N0ID0gJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImxlZ2VuZCIsIFtfYygiaDIiLCBbX3ZtLl92KCJQaXp6YSBDaG9pY2VzIildKV0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}