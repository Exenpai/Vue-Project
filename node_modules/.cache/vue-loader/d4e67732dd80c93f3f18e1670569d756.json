{"remainingRequest":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\src\\components\\Pizza.vue?vue&type=template&id=73784488&","dependencies":[{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\src\\components\\Pizza.vue","mtime":1618121035320},{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICBfYygiZmllbGRzZXQiLCBbCiAgICAgIF92bS5fbSgwKSwKICAgICAgX2MoInRhYmxlIiwgWwogICAgICAgIF9jKCJ0YWJsZSIsIFsKICAgICAgICAgIF9jKCJ0ciIsIFsKICAgICAgICAgICAgX2MoInRkIiwgeyBzdGF0aWNDbGFzczogImNlbnRlciIgfSwgWwogICAgICAgICAgICAgIF9jKCJmaWd1cmUiLCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHNyYzoKICAgICAgICAgICAgICAgICAgICAgICJodHRwczovL2ltYWdlcy5jb250ZW50c3RhY2suaW8vdjMvYXNzZXRzL2JsdDA2OGRiYzU0YmY0ZmM3ZWQvYmx0ZjcwZGYwYTNmN2I5OGQwNC81ZGI1YzgyOWU5ZWZmYTZiYTUyOTcyZWEvVHJpcGxlX0NoZWVzZV9QaXp6YV92Mi5qcGciLAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogIiA3NXB4IiwKICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjc1cHgiLAogICAgICAgICAgICAgICAgICAgIGFsdDogIlBpY3R1cmUgb2YgY2hlZXNlIHBpenphIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJmaWdjYXB0aW9uIiwgWwogICAgICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ucGlja2VkX3BpenphLAogICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAicGlja2VkX3BpenphIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJyYWRpbyIsCiAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAicGl6emF0eXBlIiwKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAiU3VwZXIgQ2hlZXN5IgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ6IF92bS5fcShfdm0ucGlja2VkX3BpenphLCAiU3VwZXIgQ2hlZXN5IikKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0ucGlja2VkX3BpenphID0gIlN1cGVyIENoZWVzeSIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfdm0uX3YoIlN1cGVyIENoZWVzeSAiKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoInRkIiwgeyBzdGF0aWNDbGFzczogImNlbnRlciIgfSwgWwogICAgICAgICAgICAgIF9jKCJmaWd1cmUiLCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHNyYzoKICAgICAgICAgICAgICAgICAgICAgICJodHRwczovL3d3dy5xdWVlbnNsZWVhcHBldGl0LmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8wMi9NZWF0LUxvdmVycy1QaXp6YS02LmpwZyIsCiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiNzVweCIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICI3NXB4IiwKICAgICAgICAgICAgICAgICAgICBhbHQ6ICJQaWN0dXJlIG9mIGV4dHJhIG1lYXR5IHBpenphIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJmaWdjYXB0aW9uIiwgWwogICAgICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ucGlja2VkX3BpenphLAogICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAicGlja2VkX3BpenphIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJyYWRpbyIsCiAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAicGl6emF0eXBlIiwKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAiRXh0cmEgTWVhdHkiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogewogICAgICAgICAgICAgICAgICAgICAgY2hlY2tlZDogX3ZtLl9xKF92bS5waWNrZWRfcGl6emEsICJFeHRyYSBNZWF0eSIpCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2hhbmdlOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnBpY2tlZF9waXp6YSA9ICJFeHRyYSBNZWF0eSIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfdm0uX3YoIkV4dHJhIE1lYXR5ICIpCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygidGQiLCB7IHN0YXRpY0NsYXNzOiAiY2VudGVyIiB9LCBbCiAgICAgICAgICAgICAgX2MoImZpZ3VyZSIsIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly91c2VyY29udGVudDIuaHVic3RhdGljLmNvbS8xNDY4NTU4NS5qcGciLAogICAgICAgICAgICAgICAgICAgIGhlaWdodDogIiA3NXB4IiwKICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjc1cHgiLAogICAgICAgICAgICAgICAgICAgIGFsdDogIlBpY3R1cmUgb2YgY2hlZXNlIHBpenphIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgIF9jKCJmaWdjYXB0aW9uIiwgWwogICAgICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ucGlja2VkX3BpenphLAogICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAicGlja2VkX3BpenphIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJyYWRpbyIsCiAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAicGl6emF0eXBlIiwKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAiUmVhbGx5IFZlZ2d5IgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgICAgICAgIGNoZWNrZWQ6IF92bS5fcShfdm0ucGlja2VkX3BpenphLCAiUmVhbGx5IFZlZ2d5IikKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0ucGlja2VkX3BpenphID0gIlJlYWxseSBWZWdneSIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfdm0uX3YoIlJlYWxseSBWZWdneSAiKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfYygidGFibGUiLCBbCiAgICAgICAgICBfYygidHIiLCBbCiAgICAgICAgICAgIF9jKCJ0ZCIsIFsKICAgICAgICAgICAgICBfYygibGFiZWwiLCB7IGF0dHJzOiB7IGZvcjogInBpenphcXVhbnRpdHkiIH0gfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCJRdWFudGl0eToiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ucGl6emFfY29zdCwKICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAicGl6emFfY29zdCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICJudW1iZXIiLAogICAgICAgICAgICAgICAgICBuYW1lOiAicGl6emFxdWFudGl0eSIsCiAgICAgICAgICAgICAgICAgIGlkOiAicGl6emFxdWFudGl0eSIsCiAgICAgICAgICAgICAgICAgIG1pbjogIjAiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5waXp6YV9jb3N0IH0sCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgX3ZtLnBpenphX2Nvc3QgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygibGVnZW5kIiwgW19jKCJoMiIsIFtfdm0uX3YoIlBpenphIENob2ljZXMiKV0pXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}