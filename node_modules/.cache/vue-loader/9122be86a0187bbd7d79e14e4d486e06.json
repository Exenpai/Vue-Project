{"remainingRequest":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\src\\views\\OrderPage.vue?vue&type=template&id=279ff09a&scoped=true&","dependencies":[{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\src\\views\\OrderPage.vue","mtime":1618150835088},{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\832223\\Documents\\Semester 4\\Emerging Trends in Technology\\Vue Project\\new_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}